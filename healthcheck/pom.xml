<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.kazansource</groupId>
		<artifactId>kazan-parent</artifactId>
		<version>2</version>
	</parent>
	
	
	<groupId>net.atos.xa.healthcheck</groupId>
	<artifactId>healthcheck-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>healthcheck</name>

	<modules>
		<module>healthcheck-core</module>
		<module>healthcheck-openejb</module>
    	<module>healthcheck-servlet</module>
	</modules>

	<developers>
		<developer>
			<name>Jonathan Macke</name>
			<email>jonathan.macke@atos.net</email>
			<organization>Atos Worldline GPS Technical 
				Direction Software Architecture</organization>
		</developer>
	</developers>

	<description>The XA healthcheck component provides a consistent, 
		unified way of performing application health checks.
		A health check is basically a small self-test which your 
		application performs to verify that a specific component or 
		responsibility is performing correctly.
	</description>

	<url>http://xa.atosworldline.com/xwiki/bin/view/XaForProduction/Healthcheck</url>

	<dependencies>

		<dependency>
			<groupId>com.yammer.metrics</groupId>
			<artifactId>metrics-core</artifactId>
		</dependency>

	</dependencies>


	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>com.yammer.metrics</groupId>
				<artifactId>metrics-core</artifactId>
				<version>${metrics.version}</version>
			</dependency>

			<dependency>
				<groupId>com.yammer.metrics</groupId>
				<artifactId>metrics-servlet</artifactId>
				<version>${metrics.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>


			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
      
      
      <dependency>
			   <groupId>com.h2database</groupId>
			   <artifactId>h2</artifactId>
			   <version>${h2.version}</version>
			   <scope>test</scope>
		  </dependency>


		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<optimize>true</optimize>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
			</plugin>

		</plugins>
	</build>

	<reporting />

	<repositories>

		<repository>
			<!-- This repository is mapped to a Maven2 proxy. This one gives access 
				to O&D and common Maven2 repositories -->
			<id>proxiedRepositories</id>
			<name>OD and common proxied repositories</name>
			<url>http://repository.atosworldline.com/nexus/content/groups/public</url>
		</repository>
		
		<repository>
			<!-- This repository is mapped to a Maven2 proxy. This one gives access 
				to O&D and common Maven2 repositories -->
			<id>kazanRepo</id>
			<name>Kazan public repository</name>
			<url>http://kazan.priv.atos.fr/nexus/content/repositories/public/</url>
		</repository>
		
	</repositories>


	<properties>
		<metrics.version>2.2.0</metrics.version>
		<junit.version>4.8.1</junit.version>
		<h2.version>1.3.162</h2.version>
		<servlet.version>2.5</servlet.version>
	</properties>

</project>
